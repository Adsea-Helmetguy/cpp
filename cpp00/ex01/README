# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    README                                             :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mlow <marvin@42.fr>                        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/05/27 14:51:05 by mlow              #+#    #+#              #
#    Updated: 2024/05/27 14:51:07 by mlow             ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

Starting with main.cpp

We need to create a PHONEBOOK where we can store up to 8 contacts.
Inside the Phonebook.hpp, we added "Contact _contacts[8]" so that it
won't exceed the limit and replace the oldest contact with the latest
one if there are those after 8th contacts.

One method i though is to give each contact a value where it increases
everytime i added a new contact manually. When a new contact is added,
all the contacts value which i will call it:"shelf life", shelf life will
increase by 1 everytime a new contact is added.
Once all contact spaces are filled and a new contact is going to be added,
since all contacts are filled to brim, it will check one by one which has
the longest shelf life, then it will free/del/clean that array with the 
new contact with a new shelf life of 0, during this time all the other 
contacts are increased by 1 at the same time.

Speaking of shelf life, its like an 80s phonebook, i used to have those
actually when i was younger but i never needed it.
Looking at their phonebooks, they all have:
1) names
2) street
3) contact numbers.
we are gonna add->
4) contact number. from 1->8.

We need to do the following:
1) ADD,
2) SEARCH,
3) EXIT.

At the start we can print out message to let the users know these
3 functions that are available to them.

In the int main(); i've created my first struc to ensure that the
@Phonebook.cpp, i added a welcome where it prints out a message, the const
at the end is just basic practice to ensure nothing gets edited.



